# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Components
    

      class ApiResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :code, Crystalline::Nilable.new(::Integer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('code') } }

        field :type, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type') } }

        field :message, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('message') } }

        sig { params(code: T.nilable(::Integer), type: T.nilable(::String), message: T.nilable(::String)).void }
        def initialize(code: nil, type: nil, message: nil)
          @code = code
          @type = type
          @message = message
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @code == other.code
          return false unless @type == other.type
          return false unless @message == other.message
          true
        end
      end
    end
  end
end
